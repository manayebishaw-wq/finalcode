
-- U) Create Tables
CREATE TABLE DEPARTMENTS (
    DEPT_ID NUMBER PRIMARY KEY,
    DEPT_NAME VARCHAR2(50)
);

CREATE TABLE EMPLOYEES (
    EMP_ID NUMBER PRIMARY KEY,
    EMP_NAME VARCHAR2(100),
    GENDER CHAR(1),
    SALARY NUMBER(10, 2),
    HIRE_DATE DATE,
    DEPT_ID NUMBER,
    CONSTRAINT FK_DEPT FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS(DEPT_ID)
);

-- A) DDL already handled above

-- B) DML (Insert, Update, Delete, Select)
-- Insert Departments
INSERT INTO DEPARTMENTS VALUES (1, 'IT');
INSERT INTO DEPARTMENTS VALUES (2, 'Finance');
INSERT INTO DEPARTMENTS VALUES (3, 'HR');
INSERT INTO DEPARTMENTS VALUES (4, 'Logistics');

-- Insert Employees
INSERT INTO EMPLOYEES VALUES (101, 'Abel Kebede', 'M', 6500, SYSDATE, 1);
INSERT INTO EMPLOYEES VALUES (102, 'Lina Desalegn', 'F', 7000, SYSDATE, 2);
INSERT INTO EMPLOYEES VALUES (103, 'Yared Molla', 'M', 5500, SYSDATE, 1);
INSERT INTO EMPLOYEES VALUES (104, 'Eyerusalem B.', 'F', 7200, SYSDATE, 3);
INSERT INTO EMPLOYEES VALUES (105, 'Selam W.', 'F', 6800, SYSDATE, 2);
INSERT INTO EMPLOYEES VALUES (106, 'Amanuel D.', 'M', 5000, SYSDATE, 4);
INSERT INTO EMPLOYEES VALUES (107, 'Hana T.', 'F', 5800, SYSDATE, 4);

-- Update Salary
UPDATE EMPLOYEES SET SALARY = 7200 WHERE EMP_ID = 101;

-- Delete a record
DELETE FROM EMPLOYEES WHERE EMP_ID = 102;

-- Select All
SELECT * FROM EMPLOYEES;

-- C) DCL (Grant and Revoke)
GRANT SELECT, INSERT, UPDATE ON EMPLOYEES TO HR_USER;
REVOKE UPDATE ON EMPLOYEES FROM HR_USER;

-- D) TCL (Transaction Control)
INSERT INTO EMPLOYEES VALUES (108, 'Netsanet A.', 'F', 6300, SYSDATE, 1);
SAVEPOINT before_raise;
UPDATE EMPLOYEES SET SALARY = 6500 WHERE EMP_ID = 108;
ROLLBACK TO before_raise;
COMMIT;

-- E) Trigger
CREATE OR REPLACE TRIGGER check_salary
BEFORE INSERT OR UPDATE ON EMPLOYEES
FOR EACH ROW
BEGIN
    IF :NEW.SALARY < 3000 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Salary must be at least 3000.');
    END IF;
END;

-- F) View
CREATE OR REPLACE VIEW EMPLOYEE_VIEW AS
SELECT EMP_NAME, SALARY, DEPT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID;

-- G) Insert a new Employee
INSERT INTO EMPLOYEES VALUES (109, 'Samuel N.', 'M', 7100, SYSDATE, 1);

-- H) Delete a Record
DELETE FROM EMPLOYEES WHERE EMP_ID = 109;

-- I) Revoke
REVOKE SELECT ON EMPLOYEES FROM HR_USER;

-- L) Grant
GRANT DELETE ON EMPLOYEES TO HR_USER;

-- K) Update
UPDATE EMPLOYEES SET SALARY = 7500 WHERE EMP_ID = 103;

-- P) Add Employee
INSERT INTO EMPLOYEES VALUES (110, 'Muluwork G.', 'F', 6700, SYSDATE, 3);

-- M) Search Employee
SELECT * FROM EMPLOYEES WHERE EMP_NAME LIKE '%Selam%';

-- JOINS Section:

-- INNER JOIN: Employees with their department names
SELECT E.EMP_ID, E.EMP_NAME, E.SALARY, D.DEPT_NAME
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID;

-- LEFT OUTER JOIN: All Employees and their departments (even if no department)
SELECT E.EMP_ID, E.EMP_NAME, D.DEPT_NAME
FROM EMPLOYEES E
LEFT OUTER JOIN DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID;

-- RIGHT OUTER JOIN: All Departments and their Employees (if any)
SELECT D.DEPT_NAME, E.EMP_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID;

-- FULL OUTER JOIN: All Employees and all Departments with possible nulls
SELECT E.EMP_NAME, D.DEPT_NAME
FROM EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID;

-- Additional Select: List employees with salary over 6500
SELECT EMP_NAME, SALARY FROM EMPLOYEES WHERE SALARY > 6500;
